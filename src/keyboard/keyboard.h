#include <stdint.h>

#ifndef KEYBOARD_H
#define KEYBOARD_H

typedef enum {
  KEYCODE_ESC = 0x01,
  KEYCODE_1 = 0x02,
  KEYCODE_2 = 0x03,
  KEYCODE_3 = 0x04,
  KEYCODE_4 = 0x05,
  KEYCODE_5 = 0x06,
  KEYCODE_6 = 0x07,
  KEYCODE_7 = 0x08,
  KEYCODE_8 = 0x09,
  KEYCODE_9 = 0x0a,
  KEYCODE_0 = 0x0b,
  KEYCODE_MINUS = 0x0c,
  KEYCODE_EQUAL = 0x0d,
  KEYCODE_BACKSPACE = 0x0e,
  KEYCODE_TAB = 0x0f,
  KEYCODE_Q = 0x10,
  KEYCODE_W = 0x11,
  KEYCODE_E = 0x12,
  KEYCODE_R = 0x13,
  KEYCODE_T = 0x14,
  KEYCODE_Y = 0x15,
  KEYCODE_U = 0x16,
  KEYCODE_I = 0x17,
  KEYCODE_O = 0x18,
  KEYCODE_P = 0x19,
  KEYCODE_OPEN_BRACKET = 0x1a,
  KEYCODE_CLOSED_BRACKET = 0x1b,
  KEYCODE_ENTER = 0x1c,
  KEYCODE_LCTRL = 0x1d,
  KEYCODE_A = 0x1e,
  KEYCODE_S = 0x1f,
  KEYCODE_D = 0x20,
  KEYCODE_F = 0x21,
  KEYCODE_G = 0x22,
  KEYCODE_H = 0x23,
  KEYCODE_J = 0x24,
  KEYCODE_K = 0x25,
  KEYCODE_L = 0x26,
  KEYCODE_COLON = 0x27,
  KEYCODE_QUOTE = 0x28,
  KEYCODE_TILDE = 0x29,
  KEYCODE_LSHIFT = 0x2a,
  KEYCODE_PIPE = 0x2b,
  KEYCODE_Z = 0x2c,
  KEYCODE_X = 0x2d,
  KEYCODE_C = 0x2e,
  KEYCODE_V = 0x2f,
  KEYCODE_B = 0x30,
  KEYCODE_N = 0x31,
  KEYCODE_M = 0x32,
  KEYCODE_COMMA = 0x33,
  KEYCODE_PERIOD = 0x34,
  KEYCODE_SLASH = 0x35,
  KEYCODE_RSHIFT = 0x36,
  KEYCODE_KEYPAD_ASTERICK = 0x37,
  KEYCODE_LALT = 0x38,
  KEYCODE_SPACE = 0x39,
  KEYCODE_CAPS = 0x3a,
  KEYCODE_F1 = 0x3b,
  KEYCODE_F2 = 0x3c,
  KEYCODE_F3 = 0x3d,
  KEYCODE_F4 = 0x3e,
  KEYCODE_F5 = 0x3f,
  KEYCODE_F6 = 0x40,
  KEYCODE_F7 = 0x41,
  KEYCODE_F8 = 0x42,
  KEYCODE_F9 = 0x43,
  KEYCODE_F10 = 0x44,
  KEYCODE_NUM = 0x45,
  KEYCODE_SCROLL = 0x46,
  KEYCODE_KEYPAD_7 = 0x47,
  KEYCODE_KEYPAD_8 = 0x48,
  KEYCODE_KEYPAD_9 = 0x49,
  KEYCODE_KEYPAD_MINUS = 0x4a,
  KEYCODE_KEYPAD_4 = 0x4b,
  KEYCODE_KEYPAD_5 = 0x4c,
  KEYCODE_KEYPAD_6 = 0x4d,
  KEYCODE_KEYPAD_PLUS = 0x4e,
  KEYCODE_KEYPAD_1 = 0x4f,
  KEYCODE_KEYPAD_2 = 0x50,
  KEYCODE_KEYPAD_3 = 0x51,
  KEYCODE_KEYPAD_0 = 0x52,
  KEYCODE_KEYPAD_PERIOD = 0x53,
  KEYCODE_F11 = 0x57,
  KEYCODE_F12 = 0x58,
  KEYCODE_UP = 0xe048,
  KEYCODE_DOWN = 0xe050,
  KEYCODE_LEFT = 0xe04b,
  KEYCODE_RIGHT = 0xe04d
} Scancode;

static const unsigned char keymap[0xff] = {
    0,
    0,
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    '0',
    '-',
    '=',
    '\b',
    '\t',
    'q',
    'w',
    'e',
    'r',
    't',
    'y',
    'u',
    'i',
    'o',
    'p',
    '[',
    ']',
    '\n',
    0,
    'a',
    's',
    'd',
    'f',
    'g',
    'h',
    'j',
    'k',
    'l',
    ';',
    '\'',
    '`',
    0,
    '\\',
    'z',
    'x',
    'c',
    'v',
    'b',
    'n',
    'm',
    ',',
    '.',
    '/',
    0,
    '*',
    0,
    ' ',
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    '7',
    '8',
    '9',
    '-',
    '4',
    '5',
    '6',
    '+',
    '1',
    '2',
    '3',
    '0',
    '.',
    0,
    0,
    0,
    0,
    0,
    0};

static const unsigned char keymap_shift[0xff] = {
    0,
    0,
    '!',
    '@',
    '#',
    '$',
    '%',
    '^',
    '&',
    '*',
    '(',
    ')',
    '_',
    '+',
    '\b',
    '\t',
    'Q',
    'W',
    'E',
    'R',
    'T',
    'Y',
    'U',
    'I',
    'O',
    'P',
    '{',
    '}',
    '\n',
    0,
    'A',
    'S',
    'D',
    'F',
    'G',
    'H',
    'J',
    'K',
    'L',
    ':',
    '"',
    '~',
    0,
    '|',
    'Z',
    'X',
    'C',
    'V',
    'B',
    'N',
    'M',
    '<',
    '>',
    '?',
    0,
    '*',
    0,
    ' ',
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    '7',
    '8',
    '9',
    '-',
    '4',
    '5',
    '6',
    '+',
    '1',
    '2',
    '3',
    '0',
    '.',
    0,
    0,
    0,
    0,
    0,
    0};

typedef enum { kbm_poll,
               kbm_interrupt } kb_mode_t;

typedef void (*kb_handler)(Scancode sc, unsigned char ch);

extern kb_handler kb_handlers[0xff];
extern int kb_handlers_length;

Scancode keyboard_get_scancode(void);
uint8_t scancode_to_keycode(Scancode sc);
uint8_t wait_for_key(void);
Scancode wait_for_scancode(void);
int keyboard_init(kb_mode_t mode);

#endif
